//@ sourceMappingURL=stats.map
// Generated by CoffeeScript 1.6.1
(function() {
  "use strict";
  var showError, showStats;

  ich.addTemplate('downloadStats', '<section class="popup box" style="opacity:0">\n  <h1>{{filename}}</h1>\n  <div class="content">\n    <p>Link created <time datetime="{{isoDate}}">{{humanDate}}</time>.</p>\n    \n    <h2>Total Downloads</h2>\n    <ul>\n      <li>{{dailyClicks}} today</li>\n      <li>{{weeklyClicks}} this week</li>\n      <li>{{totalClicks}} all time</li>\n    </ul>\n    \n    <h2>By Country</h2>\n    <ol>\n      {{#countries}}\n      <li>{{id}} ({{count}})</li>\n      {{/countries}}\n    </ol>\n    \n    <h2>By Platform</h2>\n    <ol>\n      {{#platforms}}\n      <li>{{id}} ({{count}})</li>\n      {{/platforms}}\n    </ol>\n    \n    <h2>By Referer</h2>\n    <ul>\n      {{#referrers}}\n      <li>{{id}} ({{count}})</li>\n      {{/referrers}}\n    </ul>\n    \n    <p>Get the <a href="{{statsUrl}}">full statistics</a> or click anywhere to close this popup.</p>\n  </div>\n</section>');

  showStats = function(stats) {
    var allTime, created, day, height, popup, week, width, _ref, _ref1;
    created = new Date(stats.created);
    _ref = stats.analytics, allTime = _ref.allTime, week = _ref.week, day = _ref.day;
    popup = ich.downloadStats({
      filename: /([^\/]+)$/.exec(stats.longUrl)[1],
      isoDate: created.toISOString(),
      humanDate: created.toLocaleString(),
      dailyClicks: day.shortUrlClicks,
      weeklyClicks: week.shortUrlClicks,
      totalClicks: allTime.shortUrlClicks,
      countries: allTime.countries,
      platforms: allTime.platforms,
      referrers: allTime.referrers,
      statsUrl: "" + stats.id + "+"
    }).appendTo(document.body);
    $('<div class="overlay"></div>').appendTo(document.body);
    _ref1 = popup.offset(), width = _ref1.width, height = _ref1.height;
    return popup.css({
      left: "" + ((window.innerWidth - width) / 2) + "px",
      top: "" + ((window.innerHeight - height) / 2) + "px"
    }).animate({
      opacity: 1
    }, 'fast');
  };

  showError = function(error) {
    return typeof console !== "undefined" && console !== null ? console.error(error.message) : void 0;
  };

  $(document).on('click', '.download-stats', function(event) {
    var params, url,
      _this = this;
    if (event.metaKey || event.altKey || event.ctrlKey || event.shiftKey) {
      return;
    }
    url = 'https://www.googleapis.com/urlshortener/v1/url?callback=?';
    params = {
      shortUrl: this.href.replace(/\+$/, ''),
      projection: 'FULL',
      fields: 'analytics,created,id,longUrl'
    };
    $.getJSON(url, params, function(data) {
      if (data.error != null) {
        return showError(data.error);
      } else {
        console.log(data);
        return showStats(data);
      }
    });
    return event.preventDefault();
  });

  $(document).on('click', '.overlay', function(event) {
    return $('.overlay, .popup').animate({
      opacity: 0
    }, {
      duration: 'fast',
      complete: function() {
        return this.remove();
      }
    });
  });

}).call(this);
